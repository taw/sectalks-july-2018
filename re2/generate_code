#!/usr/bin/env ruby

require "base64"

def gen_verify(flag)
  verify = []
  verify << "int verify(char *flag) {"
  verify << "  if(strlen(flag) != #{flag.size}) return 0;"
  verify += flag.chars.each_with_index.map{ |c,i|
    "  if(flag[#{i}] != #{c.ord}) return 0;"
  }.shuffle
  verify << "  return 1;"
  verify << "}"
  verify.map{ |x| x+"\n" }.join
end

puts %Q[#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "b64.h"

]

flag = ARGV[0]
flag_b64 = Base64.encode64(flag).chomp

puts gen_verify(flag_b64)

puts %q[
int main(int argc, char **argv) {
  if(argc != 2) {
    printf("Password required\n");
    return 1;
  }
  char *pass = argv[1];
  char *encoded_pass = b64_encode(pass, strlen(pass));

  if(verify(encoded_pass)) {
    printf("Password correct\n");
    return 0;
  } else {
    printf("Password incorrect\n");
    return 1;
  }
}
]
